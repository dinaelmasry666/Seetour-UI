{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet UploadImageComponent = class UploadImageComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.maxFileSize = 1; // MB\n    this.allowedExtensions = [\".jpg\", \".jpeg\", \".png\", \".gif\", \".bmp\"];\n    this.uploadForm = this.formBuilder.group({\n      fileInput: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('file', this.uploadForm.controls['fileInput'].value);\n    console.log(this.uploadForm.controls['fileInput'].value);\n    console.log(formData);\n    this.http.post('https://localhost:7277/api/AzureImagesURL/UploadImage', formData).subscribe(result => {\n      console.log(result);\n      // Reset the form after successful upload\n      this.uploadForm.reset();\n    }, error => {\n      console.error(error);\n      // Display user-friendly error message here\n    });\n  }\n};\n\nUploadImageComponent = __decorate([Component({\n  selector: 'app-upload-image',\n  templateUrl: './upload-image.component.html',\n  styleUrls: []\n})], UploadImageComponent);\nexport { UploadImageComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiFC,UAAU,QAAQ,gBAAgB;AAQ5G,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAK/BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,SAAI,GAAJD,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IAJhD,gBAAW,GAAG,CAAC,CAAC,CAAC;IACjB,sBAAiB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;IAIpE,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACvCC,SAAS,EAAE,CAAC,EAAE,EAAE,CACdP,UAAU,CAACQ,QAAQ,CACpB;KACF,CAAC;EACJ;EAEAC,QAAQ;IACN,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACP,UAAU,CAACQ,QAAQ,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC;IACpEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,UAAU,CAACQ,QAAQ,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC;IACxDC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrB,IAAI,CAACP,IAAI,CAACc,IAAI,CAAC,uDAAuD,EAAEP,QAAQ,CAAC,CAC9EQ,SAAS,CAAEC,MAAW,IAAI;MACzBJ,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;MACnB;MACA,IAAI,CAACd,UAAU,CAACe,KAAK,EAAE;IACzB,CAAC,EAAGC,KAAU,IAAI;MAChBN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CAAC;EACN;CAwBD;;AAnDYpB,oBAAoB,eALhCF,SAAS,CAAC;EACTuB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE;CACZ,CAAC,GACWvB,oBAAoB,CAmDhC;SAnDYA,oBAAoB","names":["Component","Validators","UploadImageComponent","constructor","http","formBuilder","uploadForm","group","fileInput","required","onSubmit","formData","FormData","append","controls","value","console","log","post","subscribe","result","reset","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\ITI_Tasks\\MEAN\\Angular\\Day5\\SeetourUI\\src\\app\\component\\upload-image\\upload-image.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-upload-image',\n  templateUrl: './upload-image.component.html',\n  styleUrls: []\n})\nexport class UploadImageComponent {\n  readonly maxFileSize = 1; // MB\n  readonly allowedExtensions = [\".jpg\", \".jpeg\", \".png\", \".gif\", \".bmp\"];\n  uploadForm: FormGroup;\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.uploadForm = this.formBuilder.group({\n      fileInput: ['', [\n        Validators.required\n      ]]\n    });\n  }\n\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('file', this.uploadForm.controls['fileInput'].value);\n    console.log(this.uploadForm.controls['fileInput'].value);\n    console.log(formData);\n    this.http.post('https://localhost:7277/api/AzureImagesURL/UploadImage', formData)\n      .subscribe((result: any) => {\n        console.log(result);\n        // Reset the form after successful upload\n        this.uploadForm.reset();\n      }, (error: any) => {\n        console.error(error);\n        // Display user-friendly error message here\n      });\n  }\n\n  // private fileSizeValidator(): ValidatorFn {\n  //   console.log(\"valid\");\n  //   return (control: AbstractControl): {[key: string] : boolean} | null => {\n  //     const file = control.value;\n  //     if ((file) && (file.size >1024* 1024 * this.maxFileSize)) {\n  //       return { 'fileSizeExceeded': true };\n  //     }\n  //     return null;\n  //   };\n  // }\n  \n  // private fileExtensionValidator(allowedExtensions: string[]): ValidatorFn {\n  //   return (control: AbstractControl): ValidationErrors | null => {\n  //     const file = control.value;\n  //     const fileName = file?.name;\n  //     const fileExtension = fileName?.split('.').pop();\n  //     if (fileExtension && allowedExtensions.indexOf('.' + fileExtension.toLowerCase()) === -1) {\n  //       return { invalidExtension: true };\n  //     }\n  //     return null;\n  //   };\n  // } \n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}